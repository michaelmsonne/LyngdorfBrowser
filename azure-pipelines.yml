pool:
  name: Home
#Your build pipeline references an undefined variable named ‘Github-PAT’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘AzureDevOps-PAT’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

steps:
- powershell: |
   # Write your PowerShell commands here.
   Write-Host ' - - - - - - - - - - - - - - - - - - - - - - - - -'
   Write-Host ' reflect Azure Devops repo changes to GitHub repo'
   Write-Host ' - - - - - - - - - - - - - - - - - - - - - - - - - '
   $stageDir = '$(Build.SourcesDirectory)' | Split-Path
   Write-Host "stage Dir is : $stageDir"
   $githubDir = $stageDir +"\"+"gitHub"
   Write-Host "github Dir : $githubDir"
   $destination = $githubDir +"\"+"LyngdorfBrowser.git"
   Write-Host "destination: $destination"
   #please provide your username
   $alias = 'michaelmsonne:'+ "$(Github-PAT)"
   #Please make sure, you remove https from azure-repo-clone-url
   $sourceURL = 'https://$(AzureDevOps-PAT)@dev.azure.com/Sonnes/LyngdorfBrowser/_git/LyngdorfBrowser'
   write-host "source URL : $sourceURL"
   #Please make sure, you remove https from github-repo-clone-url
   $destURL = 'https://' + $alias + '@github.com/michaelmsonne/LyngdorfBrowser.git'
   write-host "dest URL : $destURL"
   #Check if the parent directory exists and delete
   if((Test-Path -path $githubDir))
   {
       Remove-Item -Path $githubDir -Recurse -force
   }
   if(!(Test-Path -path $githubDir))
   {
       New-Item -ItemType directory -Path $githubDir
       Set-Location $githubDir
       git clone --mirror $sourceURL
   }
   else
   {
       Write-Host "The given folder path $githubDir already exists";
   }
   Set-Location $destination
   Write-Output '*****Git removing remote secondary****'
   git remote rm secondary
   Write-Output '*****Git remote add****'
   git remote add --mirror=fetch secondary $destURL
   Write-Output '*****Git fetch origin****'
   git fetch $sourceURL
   Write-Output '*****Git push secondary****'
   git push secondary --all
   Write-Output '**Azure Devops repo synced with Github repo**'
   Set-Location $stageDir
   if((Test-Path -path $githubDir))
   {
       Remove-Item -Path $githubDir -Recurse -force
   }
   write-host "Job completed"
  displayName: 'PowerShell Script'
